def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 29

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.flutter_form"
        minSdkVersion 23 // min was 16 but updated to 21 for method used
        targetSdkVersion 29
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true

    }

    flavorDimensions "app"

    productFlavors {
        devemulated {
            dimension "app"
            //applicationId "com.example.flutter_form.devemulated"
            applicationIdSuffix ".devemulated"
            versionCode 1
            versionName "1.0"
        }

        devrealdevice {
            dimension "app"
            //applicationId "com.example.flutter_form.devrealdevice"
            applicationIdSuffix ".devrealdevice"
            versionCode 1
            versionName "1.0"
        }

        production {
            dimension "app"
            //applicationId "com.example.flutter_form.production"
            applicationIdSuffix ".production"
            versionCode 1
            versionName "1.0"

        }
    }
    


    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

